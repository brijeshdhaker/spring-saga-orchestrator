## YAML Template.
---
server:
  port: 8093
#
spring:
  application:
    name: orchestrator-service
#
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        trace: false
        web-allow-others: true
#
  liquibase:
    enabled: false
logging:
  level:
    root: info

#
---
#
# local profile
#
---
#
spring:
  profiles: local
#      
  cloud:
    stream:
      function:
        definition: processor
      bindings:  
        processor-in-0:
          destination: order-created
          consumer:
            useNativeDecoding: true
        processor-out-0:
          destination: order-updated
          producer:
            useNativeEncoding: true
      kafka:
        binder:
          brokers: dockerhost:9092
          zkNodes: dockerhost:2181  
        bindings:
          processor-out-0:
            producer:
              configuration:
                value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
                key.serializer: org.apache.kafka.common.serialization.StringSerializer
                schema.registry.url: http://dockerhost:8081  
          processor-in-0:
            consumer:
              configuration:
                value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
                schema.registry.url: http://dockerhost:8081
                specific.avro.reader: true  
#
service:
  endpoints:
    inventory: http://dockerhost:8091
    payment: http://dockerhost:8092
#  
logging:
  level:
    root: error
#
---
#
# docker profile
#
---
#
spring:
  profiles: docker
#      
  cloud:
    stream:
      function:
        definition: processor  
      bindings:
        processor-in-0:
          destination: order-created
          consumer:
            useNativeDecoding: true
        processor-out-0:
          destination: order-updated
          producer:
            useNativeEncoding: true
      kafka:
        binder:
          brokers: broker:19092
          zkNodes: zookeeper:2181  
        bindings:
          processor-out-0:
            producer:
              configuration:
                value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
                key.serializer: org.apache.kafka.common.serialization.StringSerializer
                schema.registry.url: http://schema-registry:8081  
          processor-in-0:
            consumer:
              configuration:
                value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
                schema.registry.url: http://schema-registry:8081
                specific.avro.reader: true
#
#
service:
  endpoints:
    inventory: http://inventory-service:8091
    payment: http://payment-service:8092
#  
logging:
  level:
    root: error
#    